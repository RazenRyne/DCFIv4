//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eSAR.TraitServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Trait", Namespace="http://schemas.datacontract.org/2004/07/eSARService")]
    [System.SerializableAttribute()]
    public partial class Trait : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraitCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GradeLevel {
            get {
                return this.GradeLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeLevelField, value) != true)) {
                    this.GradeLevelField = value;
                    this.RaisePropertyChanged("GradeLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraitCode {
            get {
                return this.TraitCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TraitCodeField, value) != true)) {
                    this.TraitCodeField = value;
                    this.RaisePropertyChanged("TraitCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TraitServiceRef.ITraitService")]
    public interface ITraitService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraitService/GetAllTraits", ReplyAction="http://tempuri.org/ITraitService/GetAllTraitsResponse")]
        eSAR.TraitServiceRef.Trait[] GetAllTraits();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraitService/GetAllTraits", ReplyAction="http://tempuri.org/ITraitService/GetAllTraitsResponse")]
        System.Threading.Tasks.Task<eSAR.TraitServiceRef.Trait[]> GetAllTraitsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraitService/GetAllTraitsOfGradeLevel", ReplyAction="http://tempuri.org/ITraitService/GetAllTraitsOfGradeLevelResponse")]
        eSAR.TraitServiceRef.Trait[] GetAllTraitsOfGradeLevel(string gradeLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraitService/GetAllTraitsOfGradeLevel", ReplyAction="http://tempuri.org/ITraitService/GetAllTraitsOfGradeLevelResponse")]
        System.Threading.Tasks.Task<eSAR.TraitServiceRef.Trait[]> GetAllTraitsOfGradeLevelAsync(string gradeLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraitService/CreateTrait", ReplyAction="http://tempuri.org/ITraitService/CreateTraitResponse")]
        eSAR.TraitServiceRef.CreateTraitResponse CreateTrait(eSAR.TraitServiceRef.CreateTraitRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraitService/CreateTrait", ReplyAction="http://tempuri.org/ITraitService/CreateTraitResponse")]
        System.Threading.Tasks.Task<eSAR.TraitServiceRef.CreateTraitResponse> CreateTraitAsync(eSAR.TraitServiceRef.CreateTraitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraitService/UpdateTrait", ReplyAction="http://tempuri.org/ITraitService/UpdateTraitResponse")]
        eSAR.TraitServiceRef.UpdateTraitResponse UpdateTrait(eSAR.TraitServiceRef.UpdateTraitRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraitService/UpdateTrait", ReplyAction="http://tempuri.org/ITraitService/UpdateTraitResponse")]
        System.Threading.Tasks.Task<eSAR.TraitServiceRef.UpdateTraitResponse> UpdateTraitAsync(eSAR.TraitServiceRef.UpdateTraitRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateTrait", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateTraitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public eSAR.TraitServiceRef.Trait trait;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string message;
        
        public CreateTraitRequest() {
        }
        
        public CreateTraitRequest(eSAR.TraitServiceRef.Trait trait, string message) {
            this.trait = trait;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateTraitResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateTraitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CreateTraitResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public eSAR.TraitServiceRef.Trait trait;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string message;
        
        public CreateTraitResponse() {
        }
        
        public CreateTraitResponse(bool CreateTraitResult, eSAR.TraitServiceRef.Trait trait, string message) {
            this.CreateTraitResult = CreateTraitResult;
            this.trait = trait;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTrait", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTraitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public eSAR.TraitServiceRef.Trait trait;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string message;
        
        public UpdateTraitRequest() {
        }
        
        public UpdateTraitRequest(eSAR.TraitServiceRef.Trait trait, string message) {
            this.trait = trait;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTraitResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTraitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateTraitResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public eSAR.TraitServiceRef.Trait trait;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string message;
        
        public UpdateTraitResponse() {
        }
        
        public UpdateTraitResponse(bool UpdateTraitResult, eSAR.TraitServiceRef.Trait trait, string message) {
            this.UpdateTraitResult = UpdateTraitResult;
            this.trait = trait;
            this.message = message;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITraitServiceChannel : eSAR.TraitServiceRef.ITraitService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TraitServiceClient : System.ServiceModel.ClientBase<eSAR.TraitServiceRef.ITraitService>, eSAR.TraitServiceRef.ITraitService {
        
        public TraitServiceClient() {
        }
        
        public TraitServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TraitServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TraitServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TraitServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public eSAR.TraitServiceRef.Trait[] GetAllTraits() {
            return base.Channel.GetAllTraits();
        }
        
        public System.Threading.Tasks.Task<eSAR.TraitServiceRef.Trait[]> GetAllTraitsAsync() {
            return base.Channel.GetAllTraitsAsync();
        }
        
        public eSAR.TraitServiceRef.Trait[] GetAllTraitsOfGradeLevel(string gradeLevel) {
            return base.Channel.GetAllTraitsOfGradeLevel(gradeLevel);
        }
        
        public System.Threading.Tasks.Task<eSAR.TraitServiceRef.Trait[]> GetAllTraitsOfGradeLevelAsync(string gradeLevel) {
            return base.Channel.GetAllTraitsOfGradeLevelAsync(gradeLevel);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eSAR.TraitServiceRef.CreateTraitResponse eSAR.TraitServiceRef.ITraitService.CreateTrait(eSAR.TraitServiceRef.CreateTraitRequest request) {
            return base.Channel.CreateTrait(request);
        }
        
        public bool CreateTrait(ref eSAR.TraitServiceRef.Trait trait, ref string message) {
            eSAR.TraitServiceRef.CreateTraitRequest inValue = new eSAR.TraitServiceRef.CreateTraitRequest();
            inValue.trait = trait;
            inValue.message = message;
            eSAR.TraitServiceRef.CreateTraitResponse retVal = ((eSAR.TraitServiceRef.ITraitService)(this)).CreateTrait(inValue);
            trait = retVal.trait;
            message = retVal.message;
            return retVal.CreateTraitResult;
        }
        
        public System.Threading.Tasks.Task<eSAR.TraitServiceRef.CreateTraitResponse> CreateTraitAsync(eSAR.TraitServiceRef.CreateTraitRequest request) {
            return base.Channel.CreateTraitAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        eSAR.TraitServiceRef.UpdateTraitResponse eSAR.TraitServiceRef.ITraitService.UpdateTrait(eSAR.TraitServiceRef.UpdateTraitRequest request) {
            return base.Channel.UpdateTrait(request);
        }
        
        public bool UpdateTrait(ref eSAR.TraitServiceRef.Trait trait, ref string message) {
            eSAR.TraitServiceRef.UpdateTraitRequest inValue = new eSAR.TraitServiceRef.UpdateTraitRequest();
            inValue.trait = trait;
            inValue.message = message;
            eSAR.TraitServiceRef.UpdateTraitResponse retVal = ((eSAR.TraitServiceRef.ITraitService)(this)).UpdateTrait(inValue);
            trait = retVal.trait;
            message = retVal.message;
            return retVal.UpdateTraitResult;
        }
        
        public System.Threading.Tasks.Task<eSAR.TraitServiceRef.UpdateTraitResponse> UpdateTraitAsync(eSAR.TraitServiceRef.UpdateTraitRequest request) {
            return base.Channel.UpdateTraitAsync(request);
        }
    }
}
